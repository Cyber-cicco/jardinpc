package admin

import (
	"github.com/Cyber-cicco/jardin-pc/.gen/jardinpc/model"
	"github.com/Cyber-cicco/jardin-pc/internal/views/components"
	"github.com/Cyber-cicco/jardin-pc/internal/views/evenements"
)

var DB_NAVS = []components.NavLink{
	{
		Name: "Événements",
		Link: "/admin/events",
	},
	{
		Name: "Utilisateurs",
		Link: "/admin/users",
	},
}

templ DashBoardNav(links []components.NavLink) {
	<nav class="flex flex-col bg-gradient-to-b from-green-400 to-green-500 w-64 min-h-screen p-4 shadow-lg border-r-2 border-green-400">
		<div class="mb-8 p-2">
			<div class="flex items-center gap-2 text-white">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
				</svg>
				<h1 class="text-xl font-bold font-poppins">Administration</h1>
			</div>
		</div>
		<ul class="space-y-2">
			for _, link := range links {
				<li>
					<a
						hx-push-url="true"
						hx-get={ link.Link }
						hx-target="#main"
						href={ templ.SafeURL(link.Link) }
						class="flex items-center gap-3 p-3 text-white rounded-lg transition-all duration-200 hover:bg-green-600 hover:shadow-md hover:translate-x-1"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
							if link.Name == "Événements" {
								<path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"></path>
							} else if link.Name == "Utilisateurs" {
								<path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"></path>
							}
						</svg>
						<span class="font-medium">{ link.Name }</span>
					</a>
				</li>
			}
		</ul>
		<div class="mt-auto pt-4 border-t-2 border-green-600">
			<a
				href="/"
				class="flex items-center gap-3 p-3 text-white rounded-lg hover:bg-green-600 transition-colors"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
					<path stroke-linecap="round" stroke-linejoin="round" d="M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3"></path>
				</svg>
				<span>Retour au site</span>
			</a>
		</div>
	</nav>
}

templ EvenementDashBoard(before, after []*model.Evenement) {
	@components.Head("Administration Jardin")
	<body class="flex w-full h-full">
		@DashBoardNav(DB_NAVS)
		<main class="flex flex-col bg-blue-50">
			@EvenementDashBoardSection(before, after)
		</main>
	</body>
}

templ AddEvtForm(err_map map[string]string, value_map map[string]string) {
	<form id="form" class="flex flex-col gap-4" hx-post="/admin/events" hx-target="#inner" hx-swap="outerHTML">
		<div class="flex flex-col gap-2">
			<label class="text-blue-950 font-medium" for="title">Titre</label>
			<input
				class="border-green-400 px-3 py-2 border-2 rounded-lg text-blue-950"
                value={ value_map["title"] }
				type="text"
				id="title"
				name="title"
				required
			/>
            <div class="h-6 text-red-500">{ err_map["title"]}</div>
		</div>
		<div class="flex flex-col gap-2">
			<label class="text-blue-950 font-medium" for="description">Description</label>
			<textarea
				class="border-green-400 px-3 py-2 border-2 rounded-lg text-blue-950 h-32"
				id="description"
				name="description"
                value={ value_map["description"] }
			></textarea>
            <div class="h-6 text-red-500">{ err_map["description"]}</div>
		</div>
		<div class="flex flex-col gap-2">
			<label class="text-blue-950 font-medium" for="date">Date</label>
			<input
				class="border-green-400 px-3 py-2 border-2 rounded-lg text-blue-950"
				type="datetime-local"
				id="date"
				name="date"
                value={ value_map["date"] }
				required
			/>
            <div class="h-6 text-red-500">{ err_map["date"]}</div>
		</div>
		<div class="flex justify-end gap-3 mt-4">
			<button
				type="button"
				onclick="this.closest('[data-modal]').hidden = true"
				class="px-4 py-2 bg-gray-300 text-blue-950 rounded-md hover:brightness-150"
			>
				Annuler
			</button>
			<button
				type="submit"
				class="px-4 py-2 bg-green-400 text-white rounded-md hover:brightness-150 font-bold"
			>
				Créer l'événement
			</button>
		</div>
	</form>
}

templ ModalAddEvt(error_map map[string]string, value_map map[string]string) {
	<!-- Modale -->
	<div data-modal="ajouter_evt" hidden="true" class="fixed inset-0 bg-black bg-opacity-50 items-center justify-center z-50">
		<div class="flex w-full h-full justify-center items-center">
			<div class="bg-blue-50 p-6 rounded-lg w-full max-w-2xl mx-4 border-2 border-green-400 shadow-md">
				<div class="flex justify-between items-center mb-4">
					<h2 class="text-2xl font-bold text-blue-950">Nouvel événement</h2>
					<button onclick="this.closest('[data-modal]').hidden = true" class="text-blue-950 hover:text-green-600 text-2xl">&times;</button>
				</div>
                @AddEvtForm(error_map, value_map)
			</div>
		</div>
	</div>
}

templ EvenementDashBoardSection(before, after []*model.Evenement) {
	<section id="inner" class="flex gap-10 flex-col p-5 h-full w-full overflow-auto">
		<div class="flex items-center w-full gap-10 justify-center">
			<h3 class="text-3xl font-poppins text-center text-blue-950">Gestion des événements</h3>
		</div>
		<div class="flex gap-2 justify-self-end items-center justify-center">
			<span class="font-bold text-blue-950 text-xl">Ajouter</span>
			<button data-modal-trigger="ajouter_evt" class="w-[40px] h-[40px] hover:cursor-pointer hover:brightness-150 text-white rounded-full bg-green-500 font-bold flex items-center justify-center">+</button>
		</div>
		@evenements.EvenementsSection(after)
		@evenements.EvenementsPasses(before)
	</section>
    @ModalAddEvt(make(map[string]string), make(map[string]string))
}
